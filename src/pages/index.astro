---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Welcome to Astro.">
  <script>
    // Import the functions you need from the SDKs you need
    import { initializeApp } from "firebase/app";
    import { getAnalytics } from "firebase/analytics";
    import { getStorage, getDownloadURL } from "firebase/storage";
    // TODO: Add SDKs for Firebase products that you want to use
    // https://firebase.google.com/docs/web/setup#available-libraries

    import { ref, uploadBytes } from "firebase/storage";

    // Initialize Firebase
    export const app = initializeApp({
      apiKey: import.meta.env.PUBLIC_ASTRO_API_KEY,
      projectId: import.meta.env.PUBLIC_ASTRO_PROJECT_ID,
      storageBucket: import.meta.env.PUBLIC_ASTRO_STORAGE_BUCKET,
      appId: import.meta.env.PUBLIC_ASTRO_APP_ID,
    });

    export const analytics = getAnalytics(app);
    export const storage = getStorage(app);

    // import {analytics,app,storage} from '../components/Card.astro';
    // import { getStorage, ref, uploadBytes } from "firebase/storage";

    // // create a unique id for the file
    let id = Math.random() / Date.now();

    // const storage = getStorage();
    const storageRef = ref(storage, `images/${id}.mp3`);
    const metadata = {
      contentType: "audio/mp3",
    };

    // get the file and pass it to the function
    document.querySelector("form").addEventListener("submit", async (e) => {
      e.preventDefault();
      // get the file
      const file = document.querySelector("form").file.files[0];

      // -----------------------------------
      // hide fileAndButton div and show loading div
      document.getElementById("fileAndButton").style.display = "none";
      document.getElementById("loading").style.display = "block";
      // ---------------------------
      try {
        // Save the file to firebase & get the url
        const snapshot = await uploadBytes(storageRef, file, metadata);
        const url = await getDownloadURL(
          ref(storage, snapshot.metadata.fullPath)
        );

        // fetch to https://api.assemblyai.com/v2 with header aplication json
        const response = await fetch(
          "https://api.assemblyai.com/v2/transcript",
          {
            method: "POST",
            headers: {
              Authorization: import.meta.env.PUBLIC_AUTHORIZATION,
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              audio_url: url,
            }),
          }
        );

        // get the data from the response
        const data = await response.json();
        // get the id from the data
        const id = data.id;

        let transcript: any = { status: "Pending" };
        // fetch the transcript with the id

        // set interval to fetch the transcript every 15 seconds and stop when the status is completed
        const interval = setInterval(() => {
          fetchTranscript(id).then((data) => {
            if (data.status === "completed") {
              clearInterval(interval);
              // hide fileAndButton div and show loading div
              document.getElementById("fileAndButton").style.display = "block";
              document.getElementById("loading").style.display = "none";
            }
          });
        }, 15000);

        // setTimeout(() => fetchTranscript(id), 5000);
      } catch {
        console.log("error");
        // hide fileAndButton div and show loading div
        document.getElementById("fileAndButton").style.display = "block";
        document.getElementById("loading").style.display = "none";
      }
    });

    const fetchTranscript = async (id) => {
      return fetch(`https://api.assemblyai.com/v2/transcript/${id}`, {
        method: "GET",
        headers: {
          Authorization: import.meta.env.PUBLIC_AUTHORIZATION,
        },
      })
        .then((response) => {
          return response.json();
        })
        .then((data) => {
          if (data.status !== "completed") return;
          //if the data.status is not completed wait 5 seconds and fetch again
          console.log(data);

          var i = 0;
          var speed = 20;
          // add the text to the textarea
          var txt = data.text;
          function typeWriter() {
            if (i < txt.length) {
              document.getElementById("content").innerHTML += txt.charAt(i);
              i++;
              setTimeout(typeWriter, speed);
            }
          }
          typeWriter();
          return data;
        });
    };
  </script>

  <main>
    <!-- Return for with title input filed and textarea using milligram css -->
    <form>
      <!-- cneter the form -->
      <div class="row">
        <div class="column">
          <h1 class="">MP3 To Text</h1>

          <!-- create 2 columns -->
          <div id="fileAndButton" class="row">
            <div class="column">
              <fieldset>
                <input type="file" name="file" id="file" placeholder="file" />
              </fieldset>
            </div>
            <div class="column">
              <fieldset>
                <button type="submit">Submit</button>
              </fieldset>
            </div>
          </div>

          <div id="loading" class="row" style="display: none;">
            <div class="column">
              <span> Loading...</span>
            </div>
          </div>

          <fieldset>
            <textarea name="content" id="content" placeholder="Content" readonly
            ></textarea>
          </fieldset>
        </div>
      </div>
    </form>
  </main>

  <script>
    // execute the function when the form is submitted
    // document.querySelector('form').addEventListener('submit', (e) => {
    // 	e.preventDefault();
    // 	// get the file
    // 	const file =document.querySelector('form').file.files[0];
    // 	// get text area value
    // 	const content = document.querySelector('form').content.value;

    // 	// create a new form data

    // on submit get the file and save it into firebase storage
    document.querySelector("form").addEventListener("submit", async (e) => {
      e.preventDefault();
      // get the file
      const file = document.querySelector("form").file.files[0];
    });

    // create a new form data

    // let file = (<HTMLInputElement>document.getElementById('file')).files[0];

    // fetch('/api.json', {
    // 	method: 'POST',
    // 	body: JSON.stringify({
    // 		file: file,

    // 	}),
    // 	headers: {
    // 		'Content-Type': 'multipart/form-data'
    // 	}

    // })
  </script>

  <!-- center elements in the body && align vertical -->
  <style>
    /* align all contentes to the middle */
    main {
      height: 100vh;
      width: 100vw;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    * {
      text-align: center;
    }
    #content {
      text-align: left;
      /* first letter in mayus */
      text-transform: capitalize;
    }

    /* size of the textarea is the 25% of the screen */
    textarea {
      height: 50vh;
      width: 50vw;
    }
  </style>
</Layout>
